{"version":3,"sources":["pages/HomePage.js","pages/AboutPage.js","components/ArticlesList.js","pages/article-content.js","pages/ArticleListPage.js","pages/PageNotFoundPage.js","components/CommentsList.js","components/UpvotesSection.js","components/AddCommentForm.js","pages/ArticlePage.js","NavBar.js","components/Login.js","components/SignUp.js","App.js","reportWebVitals.js","index.js"],"names":["HomePage","AboutPage","ArticlesList","articles","map","article","key","className","to","name","title","content","substring","ArticleContent","ArticleListPage","PageNotFoundPage","CommentsList","comments","comment","username","text","UpvotesSection","articleName","upvotes","setArticalInfo","upvoteArticle","a","fetch","method","result","json","body","id","onClick","AddCommentFrom","setArticleInfo","useState","setUserName","commentText","setCommentText","addComment","JSON","stringify","headers","type","value","onChange","event","target","rows","cols","ArticlePage","match","params","find","artticleInfo","useEffect","fetchDate","otherArticles","filter","paragraph","NavBar","Login","userEmail","setUserEmail","userPass","setUserPass","SignUp","userName","userPhone","setUserPhone","userConf","setUserConf","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAsBeA,EApBE,kBACb,qCACI,yDACA,ihBAOA,qhBCUOC,EApBG,kBACd,qCACI,0CACA,ihBAOA,qhBCEOC,EAXM,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAF,OACjB,mCACKA,EAASC,KAAI,SAACC,EAASC,GAAV,OACV,eAAC,IAAD,CAAMC,UAAU,oBAAoBC,GAAE,mBAAcH,EAAQI,MAA5D,UACI,6BAAeJ,EAAQK,OAAdJ,GACT,4BAAID,EAAQM,QAAQ,GAAGC,UAAU,EAAE,gBCuEpCC,EA/EQ,CACnB,CACIJ,KAAM,cACNC,MAAO,iCACPC,QAAS,CAAC,suBAAD,i3DAwBP,CACFF,KAAM,aACNC,MAAO,2CACPC,QAAS,CAAC,8iBAAD,mgCAqBN,CACHF,KAAM,wBACNC,MAAO,wBACPC,QAAS,CAAC,6iBAAD,ogCC5CFG,EAPS,kBACpB,qCACI,8CACA,cAAC,EAAD,CAAcX,SAAUU,Q,+BCDjBE,EAJU,kBACrB,sDCWWC,EAZM,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAF,OACjB,qCACI,2CACCA,EAASb,KAAI,SAACc,EAAQZ,GAAT,OACZ,sBAAKC,UAAU,UAAf,UACI,6BAAKW,EAAQC,WACb,4BAAID,EAAQE,SAFcd,UCYzBe,EAhBQ,SAAC,GAA4C,IAA3CC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,eACrCC,EAAa,uCAAG,8BAAAC,EAAA,sEACGC,MAAM,iBAAD,OAAkBL,EAAlB,WAAuC,CAC7DM,OAAQ,SAFM,cACZC,EADY,gBAICA,EAAOC,OAJR,OAIZC,EAJY,OAKlBP,EAAeO,GALG,2CAAH,qDAOnB,OACA,sBAAKC,GAAG,iBAAR,UACA,wBAAQC,QAAS,kBAAMR,KAAvB,wBADA,OAEA,mDAAsBF,EAAtB,4BCsBWW,EAjCQ,SAAC,GAAmC,IAAlCZ,EAAiC,EAAjCA,YAAaa,EAAoB,EAApBA,eAAoB,EACtBC,mBAAS,IADa,mBAC/CjB,EAD+C,KACrCkB,EADqC,OAEhBD,mBAAS,IAFO,mBAE/CE,EAF+C,KAElCC,EAFkC,KAIhDC,EAAU,uCAAG,8BAAAd,EAAA,sEACMC,MAAM,iBAAD,OAAkBL,EAAlB,gBAA6C,CACnEM,OAAQ,OACRG,KAAMU,KAAKC,UAAU,CAACvB,WAAUC,KAAMkB,IACtCK,QAAS,CACL,eAAgB,sBALT,cACTd,EADS,gBAQIA,EAAOC,OARX,OAQTC,EARS,OASfI,EAAeJ,GACfM,EAAY,IACZE,EAAe,IAXA,2CAAH,qDAahB,OACI,sBAAKP,GAAG,mBAAR,UACI,+CACA,0CAEI,uBAAOY,KAAK,OAAOC,MAAO1B,EAAU2B,SAAU,SAACC,GAAD,OAAWV,EAAYU,EAAMC,OAAOH,aAEtF,6CAEI,0BAAUI,KAAK,IAAIC,KAAK,KAAKL,MAAOP,EAAaQ,SAAU,SAACC,GAAD,OAAWR,EAAeQ,EAAMC,OAAOH,aAEtG,wBAAQZ,QAAS,kBAAMO,KAAvB,6BCcGW,EAnCK,SAAC,GAAe,IAC1B1C,EADyB,EAAZ2C,MACAC,OAAO5C,KACpBJ,EAAUQ,EAAeyC,MAAK,SAAAjD,GAAO,OAAIA,EAAQI,OAASA,KAFjC,EAIQ2B,mBAAS,CAACb,QAAS,EAAGN,SAAU,KAJxC,mBAIxBsC,EAJwB,KAIVpB,EAJU,KAK/BqB,qBAAU,YACS,uCAAG,8BAAA9B,EAAA,sEACOC,MAAM,iBAAD,OAAkBlB,IAD9B,cACRoB,EADQ,gBAEKA,EAAOC,OAFZ,OAERC,EAFQ,OAGdI,EAAeJ,GAHD,2CAAH,qDAKf0B,KAED,CAAChD,IAEJ,IAAMiD,EAAgB7C,EAAe8C,QAAO,SAAAtD,GAAO,OAAIA,EAAQI,OAASA,KACxE,OAAIJ,EAIA,qCACI,6BAAKA,EAAQK,QACb,cAAC,EAAD,CAAgBY,YAAab,EAAMc,QAASgC,EAAahC,QAASC,eAAgBW,IACjF9B,EAAQM,QAAQP,KAAI,SAACwD,EAAWtD,GAAZ,OACjB,4BAAcsD,GAANtD,MAEZ,cAAC,EAAD,CAAcW,SAAUsC,EAAatC,WACrC,cAAC,EAAD,CAAgBK,YAAab,EAAM0B,eAAgBA,IACnD,uBACA,6BAAI,iDACJ,cAAC,EAAD,CAAchC,SAAUuD,OAbrB,cAAC,EAAD,KCRAG,EAfA,kBACX,8BACI,+BACI,6BACI,cAAC,IAAD,CAAMrD,GAAG,QAAT,oBAEJ,6BACI,cAAC,IAAD,CAAMA,GAAG,SAAT,qBAEJ,6BACI,cAAC,IAAD,CAAMA,GAAG,gBAAT,kCCWDsD,EArBD,WAAO,IAAD,EACkB1B,mBAAS,KAD3B,mBACT2B,EADS,KACEC,EADF,OAEgB5B,mBAAS,IAFzB,mBAET6B,EAFS,KAECC,EAFD,KAGhB,OACA,qCACI,kDACA,uBAAMlC,GAAG,mBAAT,UACI,2CAEI,uBAAOY,KAAK,QAAQC,MAAOkB,EAAWjB,SAAU,SAACC,GAAD,OAAWiB,EAAajB,EAAMC,OAAOH,aAEzF,8CAEI,uBAAOD,KAAK,WAAWC,MAAOoB,EAAUnB,SAAU,SAACC,GAAD,OAAWmB,EAAYnB,EAAMC,OAAOH,aAE1F,wBAAQD,KAAK,SAAb,mBACA,cAAC,IAAD,CAAMpC,GAAG,UAAT,8BCkBG2D,EAnCA,WAAO,IAAD,EACe/B,mBAAS,IADxB,mBACVgC,EADU,KACA/B,EADA,OAEiBD,mBAAS,IAF1B,mBAEV2B,EAFU,KAECC,EAFD,OAGiB5B,mBAAS,IAH1B,mBAGViC,EAHU,KAGCC,EAHD,OAIelC,mBAAS,IAJxB,mBAIV6B,EAJU,KAIAC,EAJA,OAKe9B,mBAAS,IALxB,mBAKVmC,EALU,KAKAC,EALA,KAMjB,OACI,qCACI,oDACA,sBAAKxC,GAAG,mBAAR,UACI,0CAEI,uBAAOY,KAAK,OAAOC,MAAOuB,EAAUtB,SAAU,SAACC,GAAD,OAAWV,EAAYU,EAAMC,OAAOH,aAEtF,2CAEI,uBAAOD,KAAK,QAAQC,MAAOkB,EAAWjB,SAAU,SAACC,GAAD,OAAWiB,EAAajB,EAAMC,OAAOH,aAEzF,2CAEI,uBAAOD,KAAK,OAAOC,MAAOwB,EAAWvB,SAAU,SAACC,GAAD,OAAWuB,EAAavB,EAAMC,OAAOH,aAExF,8CAEI,uBAAOD,KAAK,WAAWC,MAAOoB,EAAUnB,SAAU,SAACC,GAAD,OAAWmB,EAAYnB,EAAMC,OAAOH,aAE1F,sDAEI,uBAAOD,KAAK,WAAWC,MAAO0B,EAAUzB,SAAU,SAACC,GAAD,OAAWyB,EAAYzB,EAAMC,OAAOH,aAE1F,wBAAQD,KAAK,SAAb,4BCKD6B,MArBf,WACE,OACE,cAAC,IAAD,UACE,sBAAKlE,UAAU,MAAf,UACA,cAAC,EAAD,IACE,qBAAKyB,GAAG,YAAR,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO0C,KAAK,IAAIC,UAAWb,EAAOc,OAAK,IACvC,cAAC,IAAD,CAAOF,KAAK,UAAUC,UAAWR,IACjC,cAAC,IAAD,CAAOO,KAAK,QAAQC,UAAW3E,IAC/B,cAAC,IAAD,CAAO0E,KAAK,SAASC,UAAW1E,IAChC,cAAC,IAAD,CAAOyE,KAAK,gBAAgBC,UAAW7D,IACvC,cAAC,IAAD,CAAO4D,KAAK,iBAAiBC,UAAWxB,IACxC,cAAC,IAAD,CAAOwB,UAAW5D,eCjBf8D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c30e9acf.chunk.js","sourcesContent":["import React from 'react';\n\nconst HomePage = () => (\n    <>\n        <h1>Welcome to my Blog Site</h1>\n        <p>\n        You've learned React and can create amazing front-end interfaces. But deploying \n        them requires more. You need logic—and a place to put it. By combining your front-end UI with a\n        back-end solution and cloud hosting, you can build powerful and interactive full-stack applications. \n        In this project-based course, Shaun Wassell shows how to combine React, Node.js, and Amazon Web Services (AWS) in \n        a full-stack, full-featured website, including user-friendly forms for posting articles and comments\n        </p>\n        <p>\n        You've learned React and can create amazing front-end interfaces. But deploying them requires more. \n        You need logic—and a place to put it. By combining your front-end UI with a back-end solution and cloud \n        hosting, you can build powerful and interactive full-stack applications. In this project-based course, \n        Shaun Wassell shows how to combine React, Node.js, and Amazon Web Services (AWS) in a full-stack, full-featured website, \n        including user-friendly forms for posting articles and comments\n        </p>\n    </>\n);\n\nexport default HomePage;","import React from 'react';\n\nconst AboutPage = () => (\n    <>\n        <h1>About me</h1>\n        <p>\n        You've learned React and can create amazing front-end interfaces. But deploying \n        them requires more. You need logic—and a place to put it. By combining your front-end UI with a\n        back-end solution and cloud hosting, you can build powerful and interactive full-stack applications. \n        In this project-based course, Shaun Wassell shows how to combine React, Node.js, and Amazon Web Services (AWS) in \n        a full-stack, full-featured website, including user-friendly forms for posting articles and comments\n        </p>\n        <p>\n        You've learned React and can create amazing front-end interfaces. But deploying them requires more. \n        You need logic—and a place to put it. By combining your front-end UI with a back-end solution and cloud \n        hosting, you can build powerful and interactive full-stack applications. In this project-based course, \n        Shaun Wassell shows how to combine React, Node.js, and Amazon Web Services (AWS) in a full-stack, full-featured website, \n        including user-friendly forms for posting articles and comments\n        </p>\n    </>\n);\n\nexport default AboutPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ArticlesList = ({articles}) => (\n    <>\n        {articles.map((article, key) => (\n            <Link className=\"article-list-item\" to={`/article/${article.name}`}>\n                <h3 key={key}>{article.title}</h3>\n                <p>{article.content[0].substring(0,150)}</p>\n            </Link>\n        ))}\n    </>\n)\n\nexport default ArticlesList;","const ArticleContent = [\n    {\n        name: 'learn-react',\n        title: 'The Fastest Way to Learn React',\n        content: [\n            `Welcome! Today we're going to be talking about the fastest way to\n            learn React. React (also known as React.js or ReactJS) is an open-source, front end,\n             JavaScript library[3] for building user interfaces or UI components. \n             It is maintained by Facebook and a community of individual developers and companies.\n             [4][5][6] React can be used as a base in the development of single-page or mobile applications.\n              However, React is only concerned with state management and rendering that state to the DOM, \n            so creating React applications usually requires the use of additional libraries for routing.\n            [7][8] React Router[9] is an example of such a library.`,\n            `Another notable feature is the use of a virtual Document Object Model, \n            or virtual DOM. React creates an in-memory data-structure cache, computes\n            the resulting differences, and then updates the browser's displayed DOM efficiently.[11]. \n            This process is called reconciliation. This allows the programmer to write code as if the \n            entire page is rendered on each change, while the React libraries only render subcomponents \n            that actually change. This selective rendering provides a major performance boost. It saves the \n            effort of recalculating the CSS style, layout for the page and rendering for the entire page.`,\n            `Lifecycle methods\n            Lifecycle methods use a form of hooking that allows the execution of code at set points during a component's lifetime.\n            \n            shouldComponentUpdate allows the developer to prevent unnecessary re-rendering of a component by returning false if a render is not required.\n            componentDidMount is called once the component has \"mounted\" (the component has been created in the user interface, often by associating it with a DOM node). This is commonly used to trigger data loading from a remote source via an API.\n            componentWillUnmount is called immediately before the component is torn down or \"unmounted\". This is commonly used to clear resource-demanding dependencies to the component that will not simply be removed with the unmounting of the component (e.g., removing any setInterval() instances that are related to the component, or an \"eventListener\" set on the \"document\" because of the presence of the component)\n            render is the most important lifecycle method and the only required one in any component. It is usually called every time the component's state is updated, which should be reflected in the user interface.`,\n        ]\n    },    {\n        name: 'learn-node',\n        title: 'How to Build a Node Server in 10 Minutes',\n        content: [\n            `In this article, we're going to be talking looking at a very quick way\n            to set up a Node.js server. We'll be discussing some topics such as proin congue\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \n            sodales purus euismod.`,\n            `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n            `Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n        ]\n    },     {\n        name: 'my-thoughts-on-resume',\n        title: 'My Thoughts on Resume',\n        content: [\n            `Today is the day I talk about something which scares most people: resumes.\n            In reality, I'm not sure why people have such a hard time with proin congue\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \n            sodales purus euismod.`,\n            `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n            `Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n        ]\n    },  \n];\n\nexport default ArticleContent;","import React from 'react';\nimport ArticlesList from '../components/ArticlesList';\nimport ArticleContent from './article-content';\n\nconst ArticleListPage = () => (\n    <>\n        <h1>Article List</h1>\n        <ArticlesList articles={ArticleContent} />\n    </>\n);\n\nexport default ArticleListPage;","import React from 'react';\n\nconst PageNotFoundPage = () => (\n    <h1>404! Page not found</h1>\n)\n\nexport default PageNotFoundPage;","import React from 'react';\n\nconst CommentsList = ({comments}) => (\n    <>\n        <h3>Comments:</h3>\n        {comments.map((comment,key) => (\n          <div className=\"comment\" key={key}>\n              <h4>{comment.username}</h4>\n              <p>{comment.text}</p>\n          </div>\n        ))}\n    </>\n);\n\nexport default CommentsList;","import React from 'react';\n\nconst UpvotesSection = ({articleName, upvotes, setArticalInfo}) => {\n    const upvoteArticle = async () => {\n        const result = await fetch(`/api/articles/${articleName}/upvote`,{\n            method: 'post'\n        });\n        const body = await result.json();\n        setArticalInfo(body);\n    }\n    return(\n    <div id=\"upvote-section\">\n    <button onClick={() => upvoteArticle()}>Add upvote</button>&nbsp;\n    <p> This article has {upvotes} number of upvotes</p>\n    </div>\n    )\n}\n\nexport default UpvotesSection","import React, {useState} from 'react';\n\nconst AddCommentFrom = ({articleName, setArticleInfo}) => {\n    const [username, setUserName] = useState('');\n    const [commentText, setCommentText] = useState('');\n\n    const addComment = async () => {\n        const result = await fetch(`/api/articles/${articleName}/add-comment`, {\n            method: \"post\",\n            body: JSON.stringify({username, text: commentText}),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n        const body = await result.json();\n        setArticleInfo(body);\n        setUserName('');\n        setCommentText('');\n    }\n    return(\n        <div id=\"add-comment-form\">\n            <h3>Add a comment</h3>\n            <label>\n                Name: \n                <input type=\"text\" value={username} onChange={(event) => setUserName(event.target.value)} />\n            </label>\n            <label>\n                Comment: \n                <textarea rows=\"4\" cols=\"50\" value={commentText} onChange={(event) => setCommentText(event.target.value)} />\n            </label>\n            <button onClick={() => addComment()}>Add comment</button>\n        </div>\n    );\n}\n\nexport default AddCommentFrom;","import React, { useState, useEffect } from 'react';\nimport ArticlesList from '../components/ArticlesList';\nimport ArticleContent from './article-content';\nimport PageNotFoundPage from './PageNotFoundPage';\nimport CommentsList from '../components/CommentsList';\nimport UpvotesSection from '../components/UpvotesSection';\nimport AddCommentFrom from '../components/AddCommentForm';\n\n\nconst ArticlePage = ({ match }) => {\n    const name = match.params.name;\n    const article = ArticleContent.find(article => article.name === name);\n\n    const [artticleInfo, setArticleInfo] = useState({upvotes: 0, comments: []});\n    useEffect(() => {\n        const fetchDate = async () => {\n            const result = await fetch(`/api/articles/${name}`);\n            const body = await result.json();\n            setArticleInfo(body);\n        }\n        fetchDate();\n        // setArticleInfo({upvotes: 3})\n    }, [name]);\n\n    const otherArticles = ArticleContent.filter(article => article.name !== name);\n    if(!article) {\n        return(<PageNotFoundPage />)\n    }\n    return(\n        <>\n            <h1>{article.title}</h1>\n            <UpvotesSection articleName={name} upvotes={artticleInfo.upvotes} setArticalInfo={setArticleInfo} />\n            {article.content.map((paragraph, key) => (\n                <p key={key}>{paragraph}</p>\n            ))}\n            <CommentsList comments={artticleInfo.comments} />\n            <AddCommentFrom articleName={name} setArticleInfo={setArticleInfo} />\n            <hr />\n            <h3><u>Other Articles</u></h3>\n            <ArticlesList articles={otherArticles} />\n        </>\n    )\n}\n\nexport default ArticlePage;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NavBar = () => (\n    <nav>\n        <ul>\n            <li>\n                <Link to=\"/home\">Home</Link>\n            </li>\n            <li>\n                <Link to=\"/about\">About</Link>\n            </li>\n            <li>\n                <Link to=\"/article-list\">Article List</Link>\n            </li>\n        </ul>\n    </nav>\n);\nexport default NavBar;","import React, { useState } from \"react\";\nimport {Link} from 'react-router-dom';\n\nconst Login = () => {\n    const [userEmail, setUserEmail] = useState(' ');\n    const [userPass, setUserPass] = useState('');\n    return(\n    <>\n        <h2>Login to My Blog</h2>\n        <form id=\"add-comment-form\">\n            <label>\n                Email:\n                <input type=\"email\" value={userEmail} onChange={(event) => setUserEmail(event.target.value)} />\n            </label>\n            <label>\n                Password:\n                <input type=\"password\" value={userPass} onChange={(event) => setUserPass(event.target.value)} />\n            </label>\n            <button type=\"button\">Login</button>\n            <Link to=\"/signup\">New Here?</Link>\n        </form>\n    </>\n    )}\n\nexport default Login;\n","import React,{useState} from 'react';\n\nconst SignUp = () => {\n    const [userName, setUserName] = useState('');\n    const [userEmail, setUserEmail] = useState('');\n    const [userPhone, setUserPhone] = useState('');\n    const [userPass, setUserPass] = useState('');\n    const [userConf, setUserConf] = useState('');\n    return(\n        <>\n            <h2>Sign Up To My Blog</h2>\n            <div id=\"add-comment-form\">\n                <label>\n                    Name:\n                    <input type=\"text\" value={userName} onChange={(event) => setUserName(event.target.value)} />\n                </label>\n                <label>\n                    Email:\n                    <input type=\"email\" value={userEmail} onChange={(event) => setUserEmail(event.target.value)} />\n                </label>\n                <label>\n                    Phone:\n                    <input type=\"text\" value={userPhone} onChange={(event) => setUserPhone(event.target.value)} />\n                </label>\n                <label>\n                    Password:\n                    <input type=\"password\" value={userPass} onChange={(event) => setUserPass(event.target.value)} />\n                </label>\n                <label>\n                    Confirm Password:\n                    <input type=\"password\" value={userConf} onChange={(event) => setUserConf(event.target.value)} />\n                </label>\n                <button type=\"button\">Sign Up</button>\n            </div>\n        </>\n    )\n}\nexport default SignUp;","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom';\n\nimport HomePage from './pages/HomePage';\nimport AboutPage from './pages/AboutPage';\nimport ArticleListPage from './pages/ArticleListPage';\nimport ArticlePage from './pages/ArticlePage';\nimport NavBar from './NavBar';\nimport PageNotFoundPage from './pages/PageNotFoundPage';\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n      <NavBar />\n        <div id=\"page-body\">\n          <Switch>\n            <Route path=\"/\" component={Login} exact />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/home\" component={HomePage} />\n            <Route path=\"/about\" component={AboutPage} />\n            <Route path=\"/article-list\" component={ArticleListPage} />\n            <Route path=\"/article/:name\" component={ArticlePage} />\n            <Route component={PageNotFoundPage} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}